version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: file-reader-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fileReaderDB
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - file-reader-network

  # Redis for Session Storage
  redis:
    image: redis:7-alpine
    container_name: file-reader-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - file-reader-network

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    container_name: file-reader-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/fileReaderDB?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - CONVERTAPI_SECRET=${CONVERTAPI_SECRET}
    volumes:
      - ./backend:/app/backend
      - backend_uploads:/app/backend/uploads
      - backend_logs:/app/backend/logs
      - /app/backend/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - file-reader-network
    command: npm run dev

  # Frontend React App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: file-reader-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_ENVIRONMENT=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - file-reader-network
    stdin_open: true
    tty: true

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: file-reader-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - file-reader-network
    profiles:
      - production

  # File Processing Worker (Optional)
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    container_name: file-reader-worker
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/fileReaderDB?authSource=admin
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - CONVERTAPI_SECRET=${CONVERTAPI_SECRET}
    volumes:
      - ./backend:/app/backend
      - backend_uploads:/app/backend/uploads
      - backend_logs:/app/backend/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - file-reader-network
    command: node backend/workers/fileProcessor.js
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  frontend_build:
    driver: local

networks:
  file-reader-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16